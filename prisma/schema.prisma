generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  phone     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  shortDescription String
  description      String?
  brandId          String    @db.ObjectId
  categoryId       String    @db.ObjectId
  images           String[]
  hasVariant       Boolean   @default(false)
  price            Float
  extendedPrice    Float?
  stock            Int       @default(0)
  variants         Variant[] @relation("ProductVariants")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@map("products")
}

model Variant {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  attributes    Json
  thumbnail     String
  price         Float
  extendedPrice Float?
  stock         Int      @default(0)
  productId     String   @db.ObjectId
  product       Product  @relation("ProductVariants", fields: [productId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("variants")
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  thumbnail String
  brands    String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Brand {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  thumbnail  String
  categories String[] @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("brands")
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @db.ObjectId
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carts")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  variantId String? @db.ObjectId // Reference to Variant (optional for variantless products)
  quantity  Int
  price     Float // Price at the time of adding to the cart
  Cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String  @db.ObjectId

  @@map("cart_items")
}

model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  userId      String      @db.ObjectId
  items       OrderItem[] // Array of order items
  subTotal    Float
  discount    Float?
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  variantId String? @db.ObjectId
  quantity  Int
  price     Float // Price at the time of the order
  Order     Order   @relation(fields: [orderId], references: [id])
  orderId   String  @db.ObjectId

  @@map("order_items")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PROCESSING
  PROCESSED
  SHIPPING
  SHIPPED
}
